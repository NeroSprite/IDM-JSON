/**
 * generated by Xtext 2.25.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.Projection;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Projection</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProjectionImpl#getNodename <em>Nodename</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.ProjectionImpl#getKeyname <em>Keyname</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ProjectionImpl extends CommandesImpl implements Projection
{
  /**
   * The default value of the '{@link #getNodename() <em>Nodename</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodename()
   * @generated
   * @ordered
   */
  protected static final String NODENAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNodename() <em>Nodename</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNodename()
   * @generated
   * @ordered
   */
  protected String nodename = NODENAME_EDEFAULT;

  /**
   * The default value of the '{@link #getKeyname() <em>Keyname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyname()
   * @generated
   * @ordered
   */
  protected static final String KEYNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getKeyname() <em>Keyname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKeyname()
   * @generated
   * @ordered
   */
  protected String keyname = KEYNAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ProjectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.PROJECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNodename()
  {
    return nodename;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNodename(String newNodename)
  {
    String oldNodename = nodename;
    nodename = newNodename;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PROJECTION__NODENAME, oldNodename, nodename));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getKeyname()
  {
    return keyname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setKeyname(String newKeyname)
  {
    String oldKeyname = keyname;
    keyname = newKeyname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.PROJECTION__KEYNAME, oldKeyname, keyname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.PROJECTION__NODENAME:
        return getNodename();
      case MyDslPackage.PROJECTION__KEYNAME:
        return getKeyname();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.PROJECTION__NODENAME:
        setNodename((String)newValue);
        return;
      case MyDslPackage.PROJECTION__KEYNAME:
        setKeyname((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PROJECTION__NODENAME:
        setNodename(NODENAME_EDEFAULT);
        return;
      case MyDslPackage.PROJECTION__KEYNAME:
        setKeyname(KEYNAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.PROJECTION__NODENAME:
        return NODENAME_EDEFAULT == null ? nodename != null : !NODENAME_EDEFAULT.equals(nodename);
      case MyDslPackage.PROJECTION__KEYNAME:
        return KEYNAME_EDEFAULT == null ? keyname != null : !KEYNAME_EDEFAULT.equals(keyname);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nodename: ");
    result.append(nodename);
    result.append(", keyname: ");
    result.append(keyname);
    result.append(')');
    return result.toString();
  }

} //ProjectionImpl
