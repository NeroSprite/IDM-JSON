grammar org.xtext.example.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

MainGrammar:
	Main+=(JSonFile | Commandes) ("," Main+=(JSonFile | Commandes))*  
;
JSonFile:
	'JSonFile' name=STRING '{' (Contient+=JSonObject*) '}';
	
Commandes:
	'Commandes'
	'{'
		(Store | Load | Display | Subset | Projection | Insert | Remove | Modify)
	'}';


JSonObject:
		JsonArray | JsonInteger | JsonBoolean | JSonEnum | JSonString | JSonNull | Sum | Div | Mult | Sub;


JSonAttribut:
	JsonArray | JsonInteger | JsonBoolean | JSonEnum | JSonString | JSonNull | Sum | Div | Mult | Sub;

JSonEnumField:
	JsonInteger | JsonBoolean | JSonString | JSonNull | Sum | Div | Mult | Sub;

/* Load and Store */

Store :
	'Store'
	'{'
		'path' path=STRING ','
		'name' name=STRING
	'}';

Load:
	'Load'
	'{'
		'path' path=STRING ','
		'name' name=STRING
	'}';


/* Display */

Display:
	'Display'
	'{'
		'jsonfileName' name=STRING
	'}';


/* Replace */

Subset:
	'Subset'
	'{'
		'jsonfile' jsonfile+=JSonFile  ','
		'listNodes' '(' listNodes+=JSonObject ( "," listNodes+=JSonObject)* ')' 
	'}';

Projection:
	'Projection'
	'{'
		'name' name=STRING ','
		'node' node=JSonObject
	'}';

/* Modification On File */
Insert:
	'Insert'
	'{'
		'(' 'JsonFileTarget' jsonfile+=JSonFile ',' 'JsonFileSource' jsonfile+=JSonFile ')'  ','
		'Object:' node=JSonObject
	'}';

Remove:
	'Remove'
	'{'
		'JsonFileTarget' jsonfile+=JSonFile ','
		'Object:' node=JSonObject
	'}';

Modify:
	'Modify'
	'{'
		'(' 'JsonFileTarget' jsonfile+=JSonFile ',' 'JsonFileSource' jsonfile+=JSonFile ')' ','
		'Object:' node=JSonObject
	'}';



/* ATTRIBUT COMPLEX */

JsonArray:
	'JSonArray'
	name=STRING '{'
		 Contient+=JSonAttribut ( "," Contient+=JSonAttribut)*  
	'}';


JSonEnum:
	'JSonEnum'
	name=STRING
	'[' Contient+=JSonEnumField ( "," Contient+=JSonEnumField)* ']' 
	;
	
	
	
/* ATTRIBUT SIMPLE */

JsonInteger:
	'Integer'
	name=STRING
	value=INT
	;

JsonBoolean:
	'Boolean'
	name=STRING
	value=('true' | 'false')
	;
	
JSonString:
	'String'
	name=STRING
	value=STRING
	;

JSonNull:
	'Null'
	name=STRING;


/* OPPERATION */

JSonOperator:
	JsonInteger | Sum | Div | Mult | Sub;


Sum:
	'Sum'
	name=STRING
	'['
		listInterger+=JSonOperator ( "," listInterger+=JSonOperator)* 
	']';

Div:
	'Div'
	name=STRING
	'['
		listInterger+=JSonOperator ( "," listInterger+=JSonOperator)* 
	']';

Mult :
	'Mult'
	name=STRING
	'['
		listInterger+=JSonOperator ( "," listInterger+=JSonOperator)* 
	']';

Sub:
	'Sub'
	name=STRING
	'['
		listInterger+=JSonOperator ( "," listInterger+=JSonOperator)* 
	']';


/* TYPE */
EBoolean returns EBoolean:
	{EBoolean} 'true' | {EBoolean} 'false';