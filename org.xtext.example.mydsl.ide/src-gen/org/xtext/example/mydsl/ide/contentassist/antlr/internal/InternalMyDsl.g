/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMainGrammar
entryRuleMainGrammar
:
{ before(grammarAccess.getMainGrammarRule()); }
	 ruleMainGrammar
{ after(grammarAccess.getMainGrammarRule()); } 
	 EOF 
;

// Rule MainGrammar
ruleMainGrammar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainGrammarAccess().getGroup()); }
		(rule__MainGrammar__Group__0)
		{ after(grammarAccess.getMainGrammarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonFile
entryRuleJSonFile
:
{ before(grammarAccess.getJSonFileRule()); }
	 ruleJSonFile
{ after(grammarAccess.getJSonFileRule()); } 
	 EOF 
;

// Rule JSonFile
ruleJSonFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonFileAccess().getGroup()); }
		(rule__JSonFile__Group__0)
		{ after(grammarAccess.getJSonFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandes
entryRuleCommandes
:
{ before(grammarAccess.getCommandesRule()); }
	 ruleCommandes
{ after(grammarAccess.getCommandesRule()); } 
	 EOF 
;

// Rule Commandes
ruleCommandes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandesAccess().getGroup()); }
		(rule__Commandes__Group__0)
		{ after(grammarAccess.getCommandesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonObject
entryRuleJSonObject
:
{ before(grammarAccess.getJSonObjectRule()); }
	 ruleJSonObject
{ after(grammarAccess.getJSonObjectRule()); } 
	 EOF 
;

// Rule JSonObject
ruleJSonObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonObjectAccess().getAlternatives()); }
		(rule__JSonObject__Alternatives)
		{ after(grammarAccess.getJSonObjectAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonAttribut
entryRuleJSonAttribut
:
{ before(grammarAccess.getJSonAttributRule()); }
	 ruleJSonAttribut
{ after(grammarAccess.getJSonAttributRule()); } 
	 EOF 
;

// Rule JSonAttribut
ruleJSonAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonAttributAccess().getAlternatives()); }
		(rule__JSonAttribut__Alternatives)
		{ after(grammarAccess.getJSonAttributAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonEnumField
entryRuleJSonEnumField
:
{ before(grammarAccess.getJSonEnumFieldRule()); }
	 ruleJSonEnumField
{ after(grammarAccess.getJSonEnumFieldRule()); } 
	 EOF 
;

// Rule JSonEnumField
ruleJSonEnumField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getAlternatives()); }
		(rule__JSonEnumField__Alternatives)
		{ after(grammarAccess.getJSonEnumFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStore
entryRuleStore
:
{ before(grammarAccess.getStoreRule()); }
	 ruleStore
{ after(grammarAccess.getStoreRule()); } 
	 EOF 
;

// Rule Store
ruleStore 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStoreAccess().getGroup()); }
		(rule__Store__Group__0)
		{ after(grammarAccess.getStoreAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoad
entryRuleLoad
:
{ before(grammarAccess.getLoadRule()); }
	 ruleLoad
{ after(grammarAccess.getLoadRule()); } 
	 EOF 
;

// Rule Load
ruleLoad 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadAccess().getGroup()); }
		(rule__Load__Group__0)
		{ after(grammarAccess.getLoadAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDisplay
entryRuleDisplay
:
{ before(grammarAccess.getDisplayRule()); }
	 ruleDisplay
{ after(grammarAccess.getDisplayRule()); } 
	 EOF 
;

// Rule Display
ruleDisplay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDisplayAccess().getGroup()); }
		(rule__Display__Group__0)
		{ after(grammarAccess.getDisplayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubset
entryRuleSubset
:
{ before(grammarAccess.getSubsetRule()); }
	 ruleSubset
{ after(grammarAccess.getSubsetRule()); } 
	 EOF 
;

// Rule Subset
ruleSubset 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubsetAccess().getGroup()); }
		(rule__Subset__Group__0)
		{ after(grammarAccess.getSubsetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProjection
entryRuleProjection
:
{ before(grammarAccess.getProjectionRule()); }
	 ruleProjection
{ after(grammarAccess.getProjectionRule()); } 
	 EOF 
;

// Rule Projection
ruleProjection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProjectionAccess().getGroup()); }
		(rule__Projection__Group__0)
		{ after(grammarAccess.getProjectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRemove
entryRuleRemove
:
{ before(grammarAccess.getRemoveRule()); }
	 ruleRemove
{ after(grammarAccess.getRemoveRule()); } 
	 EOF 
;

// Rule Remove
ruleRemove 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRemoveAccess().getGroup()); }
		(rule__Remove__Group__0)
		{ after(grammarAccess.getRemoveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModify
entryRuleModify
:
{ before(grammarAccess.getModifyRule()); }
	 ruleModify
{ after(grammarAccess.getModifyRule()); } 
	 EOF 
;

// Rule Modify
ruleModify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModifyAccess().getGroup()); }
		(rule__Modify__Group__0)
		{ after(grammarAccess.getModifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonArray
entryRuleJsonArray
:
{ before(grammarAccess.getJsonArrayRule()); }
	 ruleJsonArray
{ after(grammarAccess.getJsonArrayRule()); } 
	 EOF 
;

// Rule JsonArray
ruleJsonArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonArrayAccess().getGroup()); }
		(rule__JsonArray__Group__0)
		{ after(grammarAccess.getJsonArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonEnum
entryRuleJSonEnum
:
{ before(grammarAccess.getJSonEnumRule()); }
	 ruleJSonEnum
{ after(grammarAccess.getJSonEnumRule()); } 
	 EOF 
;

// Rule JSonEnum
ruleJSonEnum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonEnumAccess().getGroup()); }
		(rule__JSonEnum__Group__0)
		{ after(grammarAccess.getJSonEnumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonInteger
entryRuleJsonInteger
:
{ before(grammarAccess.getJsonIntegerRule()); }
	 ruleJsonInteger
{ after(grammarAccess.getJsonIntegerRule()); } 
	 EOF 
;

// Rule JsonInteger
ruleJsonInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonIntegerAccess().getGroup()); }
		(rule__JsonInteger__Group__0)
		{ after(grammarAccess.getJsonIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJsonBoolean
entryRuleJsonBoolean
:
{ before(grammarAccess.getJsonBooleanRule()); }
	 ruleJsonBoolean
{ after(grammarAccess.getJsonBooleanRule()); } 
	 EOF 
;

// Rule JsonBoolean
ruleJsonBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getGroup()); }
		(rule__JsonBoolean__Group__0)
		{ after(grammarAccess.getJsonBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonString
entryRuleJSonString
:
{ before(grammarAccess.getJSonStringRule()); }
	 ruleJSonString
{ after(grammarAccess.getJSonStringRule()); } 
	 EOF 
;

// Rule JSonString
ruleJSonString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonStringAccess().getGroup()); }
		(rule__JSonString__Group__0)
		{ after(grammarAccess.getJSonStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonNull
entryRuleJSonNull
:
{ before(grammarAccess.getJSonNullRule()); }
	 ruleJSonNull
{ after(grammarAccess.getJSonNullRule()); } 
	 EOF 
;

// Rule JSonNull
ruleJSonNull 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonNullAccess().getGroup()); }
		(rule__JSonNull__Group__0)
		{ after(grammarAccess.getJSonNullAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJSonOperator
entryRuleJSonOperator
:
{ before(grammarAccess.getJSonOperatorRule()); }
	 ruleJSonOperator
{ after(grammarAccess.getJSonOperatorRule()); } 
	 EOF 
;

// Rule JSonOperator
ruleJSonOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJSonOperatorAccess().getAlternatives()); }
		(rule__JSonOperator__Alternatives)
		{ after(grammarAccess.getJSonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSum
entryRuleSum
:
{ before(grammarAccess.getSumRule()); }
	 ruleSum
{ after(grammarAccess.getSumRule()); } 
	 EOF 
;

// Rule Sum
ruleSum 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumAccess().getGroup()); }
		(rule__Sum__Group__0)
		{ after(grammarAccess.getSumAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDiv
entryRuleDiv
:
{ before(grammarAccess.getDivRule()); }
	 ruleDiv
{ after(grammarAccess.getDivRule()); } 
	 EOF 
;

// Rule Div
ruleDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivAccess().getGroup()); }
		(rule__Div__Group__0)
		{ after(grammarAccess.getDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMult
entryRuleMult
:
{ before(grammarAccess.getMultRule()); }
	 ruleMult
{ after(grammarAccess.getMultRule()); } 
	 EOF 
;

// Rule Mult
ruleMult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultAccess().getGroup()); }
		(rule__Mult__Group__0)
		{ after(grammarAccess.getMultAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSub
entryRuleSub
:
{ before(grammarAccess.getSubRule()); }
	 ruleSub
{ after(grammarAccess.getSubRule()); } 
	 EOF 
;

// Rule Sub
ruleSub 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubAccess().getGroup()); }
		(rule__Sub__Group__0)
		{ after(grammarAccess.getSubAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__MainAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainJSonFileParserRuleCall_0_0_0()); }
		ruleJSonFile
		{ after(grammarAccess.getMainGrammarAccess().getMainJSonFileParserRuleCall_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainCommandesParserRuleCall_0_0_1()); }
		ruleCommandes
		{ after(grammarAccess.getMainGrammarAccess().getMainCommandesParserRuleCall_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__MainAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainJSonFileParserRuleCall_1_1_0_0()); }
		ruleJSonFile
		{ after(grammarAccess.getMainGrammarAccess().getMainJSonFileParserRuleCall_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainCommandesParserRuleCall_1_1_0_1()); }
		ruleCommandes
		{ after(grammarAccess.getMainGrammarAccess().getMainCommandesParserRuleCall_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandesAccess().getStoreParserRuleCall_2_0()); }
		ruleStore
		{ after(grammarAccess.getCommandesAccess().getStoreParserRuleCall_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getLoadParserRuleCall_2_1()); }
		ruleLoad
		{ after(grammarAccess.getCommandesAccess().getLoadParserRuleCall_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getDisplayParserRuleCall_2_2()); }
		ruleDisplay
		{ after(grammarAccess.getCommandesAccess().getDisplayParserRuleCall_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getSubsetParserRuleCall_2_3()); }
		ruleSubset
		{ after(grammarAccess.getCommandesAccess().getSubsetParserRuleCall_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getProjectionParserRuleCall_2_4()); }
		ruleProjection
		{ after(grammarAccess.getCommandesAccess().getProjectionParserRuleCall_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getInsertParserRuleCall_2_5()); }
		ruleInsert
		{ after(grammarAccess.getCommandesAccess().getInsertParserRuleCall_2_5()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getRemoveParserRuleCall_2_6()); }
		ruleRemove
		{ after(grammarAccess.getCommandesAccess().getRemoveParserRuleCall_2_6()); }
	)
	|
	(
		{ before(grammarAccess.getCommandesAccess().getModifyParserRuleCall_2_7()); }
		ruleModify
		{ after(grammarAccess.getCommandesAccess().getModifyParserRuleCall_2_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonObject__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonObjectAccess().getJsonArrayParserRuleCall_0()); }
		ruleJsonArray
		{ after(grammarAccess.getJSonObjectAccess().getJsonArrayParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getJsonIntegerParserRuleCall_1()); }
		ruleJsonInteger
		{ after(grammarAccess.getJSonObjectAccess().getJsonIntegerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getJsonBooleanParserRuleCall_2()); }
		ruleJsonBoolean
		{ after(grammarAccess.getJSonObjectAccess().getJsonBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getJSonEnumParserRuleCall_3()); }
		ruleJSonEnum
		{ after(grammarAccess.getJSonObjectAccess().getJSonEnumParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getJSonStringParserRuleCall_4()); }
		ruleJSonString
		{ after(grammarAccess.getJSonObjectAccess().getJSonStringParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getJSonNullParserRuleCall_5()); }
		ruleJSonNull
		{ after(grammarAccess.getJSonObjectAccess().getJSonNullParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getSumParserRuleCall_6()); }
		ruleSum
		{ after(grammarAccess.getJSonObjectAccess().getSumParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getDivParserRuleCall_7()); }
		ruleDiv
		{ after(grammarAccess.getJSonObjectAccess().getDivParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getMultParserRuleCall_8()); }
		ruleMult
		{ after(grammarAccess.getJSonObjectAccess().getMultParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getJSonObjectAccess().getSubParserRuleCall_9()); }
		ruleSub
		{ after(grammarAccess.getJSonObjectAccess().getSubParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonAttribut__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonAttributAccess().getJsonArrayParserRuleCall_0()); }
		ruleJsonArray
		{ after(grammarAccess.getJSonAttributAccess().getJsonArrayParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getJsonIntegerParserRuleCall_1()); }
		ruleJsonInteger
		{ after(grammarAccess.getJSonAttributAccess().getJsonIntegerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getJsonBooleanParserRuleCall_2()); }
		ruleJsonBoolean
		{ after(grammarAccess.getJSonAttributAccess().getJsonBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getJSonEnumParserRuleCall_3()); }
		ruleJSonEnum
		{ after(grammarAccess.getJSonAttributAccess().getJSonEnumParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getJSonStringParserRuleCall_4()); }
		ruleJSonString
		{ after(grammarAccess.getJSonAttributAccess().getJSonStringParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getJSonNullParserRuleCall_5()); }
		ruleJSonNull
		{ after(grammarAccess.getJSonAttributAccess().getJSonNullParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getSumParserRuleCall_6()); }
		ruleSum
		{ after(grammarAccess.getJSonAttributAccess().getSumParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getDivParserRuleCall_7()); }
		ruleDiv
		{ after(grammarAccess.getJSonAttributAccess().getDivParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getMultParserRuleCall_8()); }
		ruleMult
		{ after(grammarAccess.getJSonAttributAccess().getMultParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getJSonAttributAccess().getSubParserRuleCall_9()); }
		ruleSub
		{ after(grammarAccess.getJSonAttributAccess().getSubParserRuleCall_9()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnumField__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getJsonIntegerParserRuleCall_0()); }
		ruleJsonInteger
		{ after(grammarAccess.getJSonEnumFieldAccess().getJsonIntegerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getJsonBooleanParserRuleCall_1()); }
		ruleJsonBoolean
		{ after(grammarAccess.getJSonEnumFieldAccess().getJsonBooleanParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getJSonStringParserRuleCall_2()); }
		ruleJSonString
		{ after(grammarAccess.getJSonEnumFieldAccess().getJSonStringParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getJSonNullParserRuleCall_3()); }
		ruleJSonNull
		{ after(grammarAccess.getJSonEnumFieldAccess().getJSonNullParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getSumParserRuleCall_4()); }
		ruleSum
		{ after(grammarAccess.getJSonEnumFieldAccess().getSumParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getDivParserRuleCall_5()); }
		ruleDiv
		{ after(grammarAccess.getJSonEnumFieldAccess().getDivParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getMultParserRuleCall_6()); }
		ruleMult
		{ after(grammarAccess.getJSonEnumFieldAccess().getMultParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getJSonEnumFieldAccess().getSubParserRuleCall_7()); }
		ruleSub
		{ after(grammarAccess.getJSonEnumFieldAccess().getSubParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__ValueAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getValueTrueKeyword_2_0_0()); }
		'true'
		{ after(grammarAccess.getJsonBooleanAccess().getValueTrueKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getJsonBooleanAccess().getValueFalseKeyword_2_0_1()); }
		'false'
		{ after(grammarAccess.getJsonBooleanAccess().getValueFalseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonOperatorAccess().getJsonIntegerParserRuleCall_0()); }
		ruleJsonInteger
		{ after(grammarAccess.getJSonOperatorAccess().getJsonIntegerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getJSonOperatorAccess().getSumParserRuleCall_1()); }
		ruleSum
		{ after(grammarAccess.getJSonOperatorAccess().getSumParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getJSonOperatorAccess().getDivParserRuleCall_2()); }
		ruleDiv
		{ after(grammarAccess.getJSonOperatorAccess().getDivParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getJSonOperatorAccess().getMultParserRuleCall_3()); }
		ruleMult
		{ after(grammarAccess.getJSonOperatorAccess().getMultParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getJSonOperatorAccess().getSubParserRuleCall_4()); }
		ruleSub
		{ after(grammarAccess.getJSonOperatorAccess().getSubParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainGrammar__Group__0__Impl
	rule__MainGrammar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainGrammarAccess().getMainAssignment_0()); }
	(rule__MainGrammar__MainAssignment_0)
	{ after(grammarAccess.getMainGrammarAccess().getMainAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainGrammar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainGrammarAccess().getGroup_1()); }
	(rule__MainGrammar__Group_1__0)*
	{ after(grammarAccess.getMainGrammarAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainGrammar__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainGrammar__Group_1__0__Impl
	rule__MainGrammar__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainGrammarAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getMainGrammarAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainGrammar__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainGrammarAccess().getMainAssignment_1_1()); }
	(rule__MainGrammar__MainAssignment_1_1)
	{ after(grammarAccess.getMainGrammarAccess().getMainAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonFile__Group__0__Impl
	rule__JSonFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonFileAccess().getJSonFileKeyword_0()); }
	'JSonFile'
	{ after(grammarAccess.getJSonFileAccess().getJSonFileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonFile__Group__1__Impl
	rule__JSonFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonFileAccess().getNameAssignment_1()); }
	(rule__JSonFile__NameAssignment_1)
	{ after(grammarAccess.getJSonFileAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonFile__Group__2__Impl
	rule__JSonFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonFileAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getJSonFileAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonFile__Group__3__Impl
	rule__JSonFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonFileAccess().getContientAssignment_3()); }
	(rule__JSonFile__ContientAssignment_3)*
	{ after(grammarAccess.getJSonFileAccess().getContientAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonFile__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonFileAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getJSonFileAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Commandes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commandes__Group__0__Impl
	rule__Commandes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandesAccess().getCommandesKeyword_0()); }
	'Commandes'
	{ after(grammarAccess.getCommandesAccess().getCommandesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commandes__Group__1__Impl
	rule__Commandes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandesAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getCommandesAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commandes__Group__2__Impl
	rule__Commandes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandesAccess().getAlternatives_2()); }
	(rule__Commandes__Alternatives_2)
	{ after(grammarAccess.getCommandesAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Commandes__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Commandes__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandesAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getCommandesAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Store__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__0__Impl
	rule__Store__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
	'Store'
	{ after(grammarAccess.getStoreAccess().getStoreKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__1__Impl
	rule__Store__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStoreAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__2__Impl
	rule__Store__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getPathKeyword_2()); }
	'path'
	{ after(grammarAccess.getStoreAccess().getPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__3__Impl
	rule__Store__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getPathAssignment_3()); }
	(rule__Store__PathAssignment_3)
	{ after(grammarAccess.getStoreAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__4__Impl
	rule__Store__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getStoreAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__5__Impl
	rule__Store__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getNameKeyword_5()); }
	'name'
	{ after(grammarAccess.getStoreAccess().getNameKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__6__Impl
	rule__Store__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getNameAssignment_6()); }
	(rule__Store__NameAssignment_6)
	{ after(grammarAccess.getStoreAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__7__Impl
	rule__Store__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getStoreAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__8__Impl
	rule__Store__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getContenuKeyword_8()); }
	'contenu'
	{ after(grammarAccess.getStoreAccess().getContenuKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__9__Impl
	rule__Store__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getContenuAssignment_9()); }
	(rule__Store__ContenuAssignment_9)
	{ after(grammarAccess.getStoreAccess().getContenuAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Store__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStoreAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getStoreAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Load__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__0__Impl
	rule__Load__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
	'Load'
	{ after(grammarAccess.getLoadAccess().getLoadKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__1__Impl
	rule__Load__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLoadAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__2__Impl
	rule__Load__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getPathKeyword_2()); }
	'path'
	{ after(grammarAccess.getLoadAccess().getPathKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__3__Impl
	rule__Load__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getPathAssignment_3()); }
	(rule__Load__PathAssignment_3)
	{ after(grammarAccess.getLoadAccess().getPathAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__4__Impl
	rule__Load__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getLoadAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__5__Impl
	rule__Load__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getNameKeyword_5()); }
	'name'
	{ after(grammarAccess.getLoadAccess().getNameKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__6__Impl
	rule__Load__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getNameAssignment_6()); }
	(rule__Load__NameAssignment_6)
	{ after(grammarAccess.getLoadAccess().getNameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Load__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Display__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Display__Group__0__Impl
	rule__Display__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisplayAccess().getDisplayKeyword_0()); }
	'Display'
	{ after(grammarAccess.getDisplayAccess().getDisplayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Display__Group__1__Impl
	rule__Display__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisplayAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDisplayAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Display__Group__2__Impl
	rule__Display__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisplayAccess().getJsonfileNameKeyword_2()); }
	'jsonfileName'
	{ after(grammarAccess.getDisplayAccess().getJsonfileNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Display__Group__3__Impl
	rule__Display__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisplayAccess().getNameAssignment_3()); }
	(rule__Display__NameAssignment_3)
	{ after(grammarAccess.getDisplayAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Display__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDisplayAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getDisplayAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subset__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__0__Impl
	rule__Subset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getSubsetKeyword_0()); }
	'Subset'
	{ after(grammarAccess.getSubsetAccess().getSubsetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__1__Impl
	rule__Subset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getSubsetAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__2__Impl
	rule__Subset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getArrayNameKeyword_2()); }
	'arrayName'
	{ after(grammarAccess.getSubsetAccess().getArrayNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__3__Impl
	rule__Subset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getNodenamesubAssignment_3()); }
	(rule__Subset__NodenamesubAssignment_3)
	{ after(grammarAccess.getSubsetAccess().getNodenamesubAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__4__Impl
	rule__Subset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getSubsetAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__5__Impl
	rule__Subset__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getKeyNameKeyword_5()); }
	'keyName'
	{ after(grammarAccess.getSubsetAccess().getKeyNameKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__6__Impl
	rule__Subset__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getKeynamesubAssignment_6()); }
	(rule__Subset__KeynamesubAssignment_6)
	{ after(grammarAccess.getSubsetAccess().getKeynamesubAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__7__Impl
	rule__Subset__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getGroup_7()); }
	(rule__Subset__Group_7__0)*
	{ after(grammarAccess.getSubsetAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getSubsetAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Subset__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group_7__0__Impl
	rule__Subset__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getCommaKeyword_7_0()); }
	','
	{ after(grammarAccess.getSubsetAccess().getCommaKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Subset__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubsetAccess().getKeynamesubAssignment_7_1()); }
	(rule__Subset__KeynamesubAssignment_7_1)
	{ after(grammarAccess.getSubsetAccess().getKeynamesubAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Projection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__0__Impl
	rule__Projection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getProjectionKeyword_0()); }
	'Projection'
	{ after(grammarAccess.getProjectionAccess().getProjectionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__1__Impl
	rule__Projection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getProjectionAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__2__Impl
	rule__Projection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getArrayNameKeyword_2()); }
	'arrayName'
	{ after(grammarAccess.getProjectionAccess().getArrayNameKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__3__Impl
	rule__Projection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getNodenameAssignment_3()); }
	(rule__Projection__NodenameAssignment_3)
	{ after(grammarAccess.getProjectionAccess().getNodenameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__4__Impl
	rule__Projection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getProjectionAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__5__Impl
	rule__Projection__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getKeyNameKeyword_5()); }
	'keyName'
	{ after(grammarAccess.getProjectionAccess().getKeyNameKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__6__Impl
	rule__Projection__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getKeynameAssignment_6()); }
	(rule__Projection__KeynameAssignment_6)
	{ after(grammarAccess.getProjectionAccess().getKeynameAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Projection__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProjectionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getProjectionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
	'Insert'
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getInsertAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getTargetNodeKeyword_2()); }
	'targetNode'
	{ after(grammarAccess.getInsertAccess().getTargetNodeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
	rule__Insert__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getTargetNodeAssignment_3()); }
	(rule__Insert__TargetNodeAssignment_3)
	{ after(grammarAccess.getInsertAccess().getTargetNodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__4__Impl
	rule__Insert__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getInsertAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__5__Impl
	rule__Insert__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getNameObjectKeyword_5()); }
	'nameObject'
	{ after(grammarAccess.getInsertAccess().getNameObjectKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__6__Impl
	rule__Insert__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getNameObjectAssignment_6()); }
	(rule__Insert__NameObjectAssignment_6)
	{ after(grammarAccess.getInsertAccess().getNameObjectAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getInsertAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Remove__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__0__Impl
	rule__Remove__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRemoveKeyword_0()); }
	'Remove'
	{ after(grammarAccess.getRemoveAccess().getRemoveKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__1__Impl
	rule__Remove__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRemoveAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__2__Impl
	rule__Remove__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getTargetNodeKeyword_2()); }
	'targetNode'
	{ after(grammarAccess.getRemoveAccess().getTargetNodeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__3__Impl
	rule__Remove__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getTargetNodeAssignment_3()); }
	(rule__Remove__TargetNodeAssignment_3)
	{ after(grammarAccess.getRemoveAccess().getTargetNodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__4__Impl
	rule__Remove__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getRemoveAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__5__Impl
	rule__Remove__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getNameObjectRemoveKeyword_5()); }
	'nameObjectRemove'
	{ after(grammarAccess.getRemoveAccess().getNameObjectRemoveKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__6__Impl
	rule__Remove__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getNameObjectRemoveAssignment_6()); }
	(rule__Remove__NameObjectRemoveAssignment_6)
	{ after(grammarAccess.getRemoveAccess().getNameObjectRemoveAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Remove__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRemoveAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRemoveAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Modify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__0__Impl
	rule__Modify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getModifyKeyword_0()); }
	'Modify'
	{ after(grammarAccess.getModifyAccess().getModifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__1__Impl
	rule__Modify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getModifyAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__2__Impl
	rule__Modify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getTargetNodeKeyword_2()); }
	'targetNode'
	{ after(grammarAccess.getModifyAccess().getTargetNodeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__3__Impl
	rule__Modify__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getTargetNodeAssignment_3()); }
	(rule__Modify__TargetNodeAssignment_3)
	{ after(grammarAccess.getModifyAccess().getTargetNodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__4__Impl
	rule__Modify__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getModifyAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__5__Impl
	rule__Modify__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getNameObjectRemoveKeyword_5()); }
	'nameObjectRemove'
	{ after(grammarAccess.getModifyAccess().getNameObjectRemoveKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__6__Impl
	rule__Modify__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getNameObjectRemoveAssignment_6()); }
	(rule__Modify__NameObjectRemoveAssignment_6)
	{ after(grammarAccess.getModifyAccess().getNameObjectRemoveAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__7__Impl
	rule__Modify__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getCommaKeyword_7()); }
	','
	{ after(grammarAccess.getModifyAccess().getCommaKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__8__Impl
	rule__Modify__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getNameObjectKeyword_8()); }
	'nameObject'
	{ after(grammarAccess.getModifyAccess().getNameObjectKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__9__Impl
	rule__Modify__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getNameObjectAssignment_9()); }
	(rule__Modify__NameObjectAssignment_9)
	{ after(grammarAccess.getModifyAccess().getNameObjectAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Modify__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModifyAccess().getRightCurlyBracketKeyword_10()); }
	'}'
	{ after(grammarAccess.getModifyAccess().getRightCurlyBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__0__Impl
	rule__JsonArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getJSonArrayKeyword_0()); }
	'JSonArray'
	{ after(grammarAccess.getJsonArrayAccess().getJSonArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__1__Impl
	rule__JsonArray__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getNameAssignment_1()); }
	(rule__JsonArray__NameAssignment_1)
	{ after(grammarAccess.getJsonArrayAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__2__Impl
	rule__JsonArray__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getJsonArrayAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__3__Impl
	rule__JsonArray__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getContientAssignment_3()); }
	(rule__JsonArray__ContientAssignment_3)
	{ after(grammarAccess.getJsonArrayAccess().getContientAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__4__Impl
	rule__JsonArray__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getGroup_4()); }
	(rule__JsonArray__Group_4__0)*
	{ after(grammarAccess.getJsonArrayAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getJsonArrayAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonArray__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group_4__0__Impl
	rule__JsonArray__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getJsonArrayAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonArray__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonArrayAccess().getContientAssignment_4_1()); }
	(rule__JsonArray__ContientAssignment_4_1)
	{ after(grammarAccess.getJsonArrayAccess().getContientAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonEnum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__0__Impl
	rule__JSonEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getJSonEnumKeyword_0()); }
	'JSonEnum'
	{ after(grammarAccess.getJSonEnumAccess().getJSonEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__1__Impl
	rule__JSonEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getNameAssignment_1()); }
	(rule__JSonEnum__NameAssignment_1)
	{ after(grammarAccess.getJSonEnumAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__2__Impl
	rule__JSonEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getJSonEnumAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__3__Impl
	rule__JSonEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getContientAssignment_3()); }
	(rule__JSonEnum__ContientAssignment_3)
	{ after(grammarAccess.getJSonEnumAccess().getContientAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__4__Impl
	rule__JSonEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getGroup_4()); }
	(rule__JSonEnum__Group_4__0)*
	{ after(grammarAccess.getJSonEnumAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getJSonEnumAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonEnum__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group_4__0__Impl
	rule__JSonEnum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getJSonEnumAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonEnum__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonEnumAccess().getContientAssignment_4_1()); }
	(rule__JSonEnum__ContientAssignment_4_1)
	{ after(grammarAccess.getJSonEnumAccess().getContientAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonInteger__Group__0__Impl
	rule__JsonInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonIntegerAccess().getIntegerKeyword_0()); }
	'Integer'
	{ after(grammarAccess.getJsonIntegerAccess().getIntegerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonInteger__Group__1__Impl
	rule__JsonInteger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonIntegerAccess().getNameAssignment_1()); }
	(rule__JsonInteger__NameAssignment_1)
	{ after(grammarAccess.getJsonIntegerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonInteger__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonIntegerAccess().getValueAssignment_2()); }
	(rule__JsonInteger__ValueAssignment_2)
	{ after(grammarAccess.getJsonIntegerAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JsonBoolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonBoolean__Group__0__Impl
	rule__JsonBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonBooleanAccess().getBooleanKeyword_0()); }
	'Boolean'
	{ after(grammarAccess.getJsonBooleanAccess().getBooleanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonBoolean__Group__1__Impl
	rule__JsonBoolean__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonBooleanAccess().getNameAssignment_1()); }
	(rule__JsonBoolean__NameAssignment_1)
	{ after(grammarAccess.getJsonBooleanAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JsonBoolean__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJsonBooleanAccess().getValueAssignment_2()); }
	(rule__JsonBoolean__ValueAssignment_2)
	{ after(grammarAccess.getJsonBooleanAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonString__Group__0__Impl
	rule__JSonString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonStringAccess().getStringKeyword_0()); }
	'String'
	{ after(grammarAccess.getJSonStringAccess().getStringKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonString__Group__1__Impl
	rule__JSonString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonStringAccess().getNameAssignment_1()); }
	(rule__JSonString__NameAssignment_1)
	{ after(grammarAccess.getJSonStringAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonStringAccess().getValueAssignment_2()); }
	(rule__JSonString__ValueAssignment_2)
	{ after(grammarAccess.getJSonStringAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JSonNull__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonNull__Group__0__Impl
	rule__JSonNull__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonNull__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonNullAccess().getNullKeyword_0()); }
	'Null'
	{ after(grammarAccess.getJSonNullAccess().getNullKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonNull__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JSonNull__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonNull__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJSonNullAccess().getNameAssignment_1()); }
	(rule__JSonNull__NameAssignment_1)
	{ after(grammarAccess.getJSonNullAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__0__Impl
	rule__Sum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getSumKeyword_0()); }
	'Sum'
	{ after(grammarAccess.getSumAccess().getSumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__1__Impl
	rule__Sum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getNameAssignment_1()); }
	(rule__Sum__NameAssignment_1)
	{ after(grammarAccess.getSumAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__2__Impl
	rule__Sum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getSumAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__3__Impl
	rule__Sum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getListIntergerAssignment_3()); }
	(rule__Sum__ListIntergerAssignment_3)
	{ after(grammarAccess.getSumAccess().getListIntergerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__4__Impl
	rule__Sum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getGroup_4()); }
	(rule__Sum__Group_4__0)*
	{ after(grammarAccess.getSumAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSumAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sum__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__0__Impl
	rule__Sum__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSumAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sum__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumAccess().getListIntergerAssignment_4_1()); }
	(rule__Sum__ListIntergerAssignment_4_1)
	{ after(grammarAccess.getSumAccess().getListIntergerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Div__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__0__Impl
	rule__Div__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getDivKeyword_0()); }
	'Div'
	{ after(grammarAccess.getDivAccess().getDivKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__1__Impl
	rule__Div__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getNameAssignment_1()); }
	(rule__Div__NameAssignment_1)
	{ after(grammarAccess.getDivAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__2__Impl
	rule__Div__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getDivAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__3__Impl
	rule__Div__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getListIntergerAssignment_3()); }
	(rule__Div__ListIntergerAssignment_3)
	{ after(grammarAccess.getDivAccess().getListIntergerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__4__Impl
	rule__Div__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getGroup_4()); }
	(rule__Div__Group_4__0)*
	{ after(grammarAccess.getDivAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getDivAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Div__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group_4__0__Impl
	rule__Div__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getDivAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Div__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivAccess().getListIntergerAssignment_4_1()); }
	(rule__Div__ListIntergerAssignment_4_1)
	{ after(grammarAccess.getDivAccess().getListIntergerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mult__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__0__Impl
	rule__Mult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getMultKeyword_0()); }
	'Mult'
	{ after(grammarAccess.getMultAccess().getMultKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__1__Impl
	rule__Mult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getNameAssignment_1()); }
	(rule__Mult__NameAssignment_1)
	{ after(grammarAccess.getMultAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__2__Impl
	rule__Mult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getMultAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__3__Impl
	rule__Mult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getListIntergerAssignment_3()); }
	(rule__Mult__ListIntergerAssignment_3)
	{ after(grammarAccess.getMultAccess().getListIntergerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__4__Impl
	rule__Mult__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getGroup_4()); }
	(rule__Mult__Group_4__0)*
	{ after(grammarAccess.getMultAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getMultAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mult__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group_4__0__Impl
	rule__Mult__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getMultAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mult__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultAccess().getListIntergerAssignment_4_1()); }
	(rule__Mult__ListIntergerAssignment_4_1)
	{ after(grammarAccess.getMultAccess().getListIntergerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sub__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__0__Impl
	rule__Sub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getSubKeyword_0()); }
	'Sub'
	{ after(grammarAccess.getSubAccess().getSubKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__1__Impl
	rule__Sub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getNameAssignment_1()); }
	(rule__Sub__NameAssignment_1)
	{ after(grammarAccess.getSubAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__2__Impl
	rule__Sub__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getSubAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__3__Impl
	rule__Sub__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getListIntergerAssignment_3()); }
	(rule__Sub__ListIntergerAssignment_3)
	{ after(grammarAccess.getSubAccess().getListIntergerAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__4__Impl
	rule__Sub__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getGroup_4()); }
	(rule__Sub__Group_4__0)*
	{ after(grammarAccess.getSubAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getSubAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sub__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_4__0__Impl
	rule__Sub__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSubAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sub__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubAccess().getListIntergerAssignment_4_1()); }
	(rule__Sub__ListIntergerAssignment_4_1)
	{ after(grammarAccess.getSubAccess().getListIntergerAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainGrammar__MainAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainAlternatives_0_0()); }
		(rule__MainGrammar__MainAlternatives_0_0)
		{ after(grammarAccess.getMainGrammarAccess().getMainAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainGrammar__MainAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainGrammarAccess().getMainAlternatives_1_1_0()); }
		(rule__MainGrammar__MainAlternatives_1_1_0)
		{ after(grammarAccess.getMainGrammarAccess().getMainAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonFileAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSonFileAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonFile__ContientAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonFileAccess().getContientJSonObjectParserRuleCall_3_0()); }
		ruleJSonObject
		{ after(grammarAccess.getJSonFileAccess().getContientJSonObjectParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getPathSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoreAccess().getPathSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getNameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoreAccess().getNameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Store__ContenuAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStoreAccess().getContenuSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getStoreAccess().getContenuSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__PathAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getPathSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoadAccess().getPathSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Load__NameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadAccess().getNameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getLoadAccess().getNameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Display__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDisplayAccess().getNameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getDisplayAccess().getNameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__NodenamesubAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetAccess().getNodenamesubSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubsetAccess().getNodenamesubSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__KeynamesubAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetAccess().getKeynamesubSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubsetAccess().getKeynamesubSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Subset__KeynamesubAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubsetAccess().getKeynamesubSTRINGTerminalRuleCall_7_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubsetAccess().getKeynamesubSTRINGTerminalRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__NodenameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionAccess().getNodenameSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectionAccess().getNodenameSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Projection__KeynameAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProjectionAccess().getKeynameSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getProjectionAccess().getKeynameSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__TargetNodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getInsertAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__NameObjectAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getNameObjectSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getInsertAccess().getNameObjectSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__TargetNodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Remove__NameObjectRemoveAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRemoveAccess().getNameObjectRemoveSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getRemoveAccess().getNameObjectRemoveSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__TargetNodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifyAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getModifyAccess().getTargetNodeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__NameObjectRemoveAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifyAccess().getNameObjectRemoveSTRINGTerminalRuleCall_6_0()); }
		RULE_STRING
		{ after(grammarAccess.getModifyAccess().getNameObjectRemoveSTRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Modify__NameObjectAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModifyAccess().getNameObjectSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getModifyAccess().getNameObjectSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonArrayAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonArrayAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__ContientAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_3_0()); }
		ruleJSonAttribut
		{ after(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonArray__ContientAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_4_1_0()); }
		ruleJSonAttribut
		{ after(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonEnumAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSonEnumAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__ContientAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonEnumAccess().getContientJSonEnumFieldParserRuleCall_3_0()); }
		ruleJSonEnumField
		{ after(grammarAccess.getJSonEnumAccess().getContientJSonEnumFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonEnum__ContientAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonEnumAccess().getContientJSonEnumFieldParserRuleCall_4_1_0()); }
		ruleJSonEnumField
		{ after(grammarAccess.getJSonEnumAccess().getContientJSonEnumFieldParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonIntegerAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonIntegerAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonInteger__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonIntegerAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getJsonIntegerAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJsonBooleanAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JsonBoolean__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJsonBooleanAccess().getValueAlternatives_2_0()); }
		(rule__JsonBoolean__ValueAlternatives_2_0)
		{ after(grammarAccess.getJsonBooleanAccess().getValueAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonStringAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSonStringAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonString__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonStringAccess().getValueSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSonStringAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JSonNull__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJSonNullAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getJSonNullAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSumAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__ListIntergerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getSumAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sum__ListIntergerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getSumAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getDivAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__ListIntergerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getDivAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Div__ListIntergerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getDivAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMultAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__ListIntergerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getMultAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mult__ListIntergerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getMultAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__ListIntergerAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getSubAccess().getListIntergerJSonOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sub__ListIntergerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
		ruleJSonOperator
		{ after(grammarAccess.getSubAccess().getListIntergerJSonOperatorParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
