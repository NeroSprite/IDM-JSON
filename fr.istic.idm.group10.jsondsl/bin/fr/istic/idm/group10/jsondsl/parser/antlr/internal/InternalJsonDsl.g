/*
 * generated by Xtext 2.25.0
 */
grammar InternalJsonDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.istic.idm.group10.jsondsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.istic.idm.group10.jsondsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.istic.idm.group10.jsondsl.services.JsonDslGrammarAccess;

}

@parser::members {

 	private JsonDslGrammarAccess grammarAccess;

    public InternalJsonDslParser(TokenStream input, JsonDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "JSonFile";
   	}

   	@Override
   	protected JsonDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleJSonFile
entryRuleJSonFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonFileRule()); }
	iv_ruleJSonFile=ruleJSonFile
	{ $current=$iv_ruleJSonFile.current; }
	EOF;

// Rule JSonFile
ruleJSonFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonFileAccess().getJSonFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonFileAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJSonFileAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJSonFileAccess().getContientJSonObjectParserRuleCall_3_0());
				}
				lv_Contient_3_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJSonFileRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getJSonFileAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleJSonObject
entryRuleJSonObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonObjectRule()); }
	iv_ruleJSonObject=ruleJSonObject
	{ $current=$iv_ruleJSonObject.current; }
	EOF;

// Rule JSonObject
ruleJSonObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonArrayParserRuleCall_0());
		}
		this_JsonArray_0=ruleJsonArray
		{
			$current = $this_JsonArray_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonIntegerParserRuleCall_1());
		}
		this_JsonInteger_1=ruleJsonInteger
		{
			$current = $this_JsonInteger_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonBooleanParserRuleCall_2());
		}
		this_JsonBoolean_2=ruleJsonBoolean
		{
			$current = $this_JsonBoolean_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonAttribut_ImplParserRuleCall_3());
		}
		this_JSonAttribut_Impl_3=ruleJSonAttribut_Impl
		{
			$current = $this_JSonAttribut_Impl_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonEnumParserRuleCall_4());
		}
		this_JSonEnum_4=ruleJSonEnum
		{
			$current = $this_JSonEnum_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonStringParserRuleCall_5());
		}
		this_JSonString_5=ruleJSonString
		{
			$current = $this_JSonString_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonNullParserRuleCall_6());
		}
		this_JSonNull_6=ruleJSonNull
		{
			$current = $this_JSonNull_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getOperation_ImplParserRuleCall_7());
		}
		this_Operation_Impl_7=ruleOperation_Impl
		{
			$current = $this_Operation_Impl_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getComplexAttribut_ImplParserRuleCall_8());
		}
		this_ComplexAttribut_Impl_8=ruleComplexAttribut_Impl
		{
			$current = $this_ComplexAttribut_Impl_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getSimpleAttribut_ImplParserRuleCall_9());
		}
		this_SimpleAttribut_Impl_9=ruleSimpleAttribut_Impl
		{
			$current = $this_SimpleAttribut_Impl_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getSumParserRuleCall_10());
		}
		this_Sum_10=ruleSum
		{
			$current = $this_Sum_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getDivParserRuleCall_11());
		}
		this_Div_11=ruleDiv
		{
			$current = $this_Div_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getMultParserRuleCall_12());
		}
		this_Mult_12=ruleMult
		{
			$current = $this_Mult_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getSubParserRuleCall_13());
		}
		this_Sub_13=ruleSub
		{
			$current = $this_Sub_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJSonAttribut
entryRuleJSonAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonAttributRule()); }
	iv_ruleJSonAttribut=ruleJSonAttribut
	{ $current=$iv_ruleJSonAttribut.current; }
	EOF;

// Rule JSonAttribut
ruleJSonAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonAttribut_ImplParserRuleCall_0());
		}
		this_JSonAttribut_Impl_0=ruleJSonAttribut_Impl
		{
			$current = $this_JSonAttribut_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonArrayParserRuleCall_1());
		}
		this_JsonArray_1=ruleJsonArray
		{
			$current = $this_JsonArray_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonIntegerParserRuleCall_2());
		}
		this_JsonInteger_2=ruleJsonInteger
		{
			$current = $this_JsonInteger_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonBooleanParserRuleCall_3());
		}
		this_JsonBoolean_3=ruleJsonBoolean
		{
			$current = $this_JsonBoolean_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonEnumParserRuleCall_4());
		}
		this_JSonEnum_4=ruleJSonEnum
		{
			$current = $this_JSonEnum_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonStringParserRuleCall_5());
		}
		this_JSonString_5=ruleJSonString
		{
			$current = $this_JSonString_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonNullParserRuleCall_6());
		}
		this_JSonNull_6=ruleJSonNull
		{
			$current = $this_JSonNull_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getOperation_ImplParserRuleCall_7());
		}
		this_Operation_Impl_7=ruleOperation_Impl
		{
			$current = $this_Operation_Impl_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getComplexAttribut_ImplParserRuleCall_8());
		}
		this_ComplexAttribut_Impl_8=ruleComplexAttribut_Impl
		{
			$current = $this_ComplexAttribut_Impl_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getSimpleAttribut_ImplParserRuleCall_9());
		}
		this_SimpleAttribut_Impl_9=ruleSimpleAttribut_Impl
		{
			$current = $this_SimpleAttribut_Impl_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getSumParserRuleCall_10());
		}
		this_Sum_10=ruleSum
		{
			$current = $this_Sum_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getDivParserRuleCall_11());
		}
		this_Div_11=ruleDiv
		{
			$current = $this_Div_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getMultParserRuleCall_12());
		}
		this_Mult_12=ruleMult
		{
			$current = $this_Mult_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getSubParserRuleCall_13());
		}
		this_Sub_13=ruleSub
		{
			$current = $this_Sub_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJsonArray
entryRuleJsonArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonArrayRule()); }
	iv_ruleJsonArray=ruleJsonArray
	{ $current=$iv_ruleJsonArray.current; }
	EOF;

// Rule JsonArray
ruleJsonArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getJsonArrayAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonArrayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJsonArrayAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_2_0());
				}
				lv_Contient_2_0=ruleJSonAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonArrayRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_2_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getJsonArrayAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_3_1_0());
					}
					lv_Contient_4_0=ruleJSonAttribut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJsonArrayRule());
						}
						add(
							$current,
							"Contient",
							lv_Contient_4_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJsonArrayAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleJsonInteger
entryRuleJsonInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonIntegerRule()); }
	iv_ruleJsonInteger=ruleJsonInteger
	{ $current=$iv_ruleJsonInteger.current; }
	EOF;

// Rule JsonInteger
ruleJsonInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_STRING
				{
					newLeafNode(lv_name_0_0, grammarAccess.getJsonIntegerAccess().getNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonIntegerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getJsonIntegerAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonIntegerRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleJsonBoolean
entryRuleJsonBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonBooleanRule()); }
	iv_ruleJsonBoolean=ruleJsonBoolean
	{ $current=$iv_ruleJsonBoolean.current; }
	EOF;

// Rule JsonBoolean
ruleJsonBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJsonBooleanAccess().getJsonBooleanAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0='value'
				{
					newLeafNode(lv_value_1_0, grammarAccess.getJsonBooleanAccess().getValueValueKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonBooleanRule());
					}
					setWithLastConsumed($current, "value", lv_value_1_0 != null, "value");
				}
			)
		)?
		otherlv_2='JsonBoolean'
		{
			newLeafNode(otherlv_2, grammarAccess.getJsonBooleanAccess().getJsonBooleanKeyword_2());
		}
		(
			(
				lv_name_3_0=RULE_STRING
				{
					newLeafNode(lv_name_3_0, grammarAccess.getJsonBooleanAccess().getNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonBooleanRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleJSonAttribut_Impl
entryRuleJSonAttribut_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonAttribut_ImplRule()); }
	iv_ruleJSonAttribut_Impl=ruleJSonAttribut_Impl
	{ $current=$iv_ruleJSonAttribut_Impl.current; }
	EOF;

// Rule JSonAttribut_Impl
ruleJSonAttribut_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJSonAttribut_ImplAccess().getJSonAttributAction_0(),
					$current);
			}
		)
		otherlv_1='JSonAttribut'
		{
			newLeafNode(otherlv_1, grammarAccess.getJSonAttribut_ImplAccess().getJSonAttributKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getJSonAttribut_ImplAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonAttribut_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleJSonEnum
entryRuleJSonEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonEnumRule()); }
	iv_ruleJSonEnum=ruleJSonEnum
	{ $current=$iv_ruleJSonEnum.current; }
	EOF;

// Rule JSonEnum
ruleJSonEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonEnum'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonEnumAccess().getJSonEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonEnumAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJSonEnumAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='enum'
		{
			newLeafNode(otherlv_3, grammarAccess.getJSonEnumAccess().getEnumKeyword_3());
		}
		otherlv_4='['
		{
			newLeafNode(otherlv_4, grammarAccess.getJSonEnumAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJSonEnumAccess().getContientJSonAttributParserRuleCall_5_0());
				}
				lv_Contient_5_0=ruleJSonAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJSonEnumRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_5_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getJSonEnumAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJSonEnumAccess().getContientJSonAttributParserRuleCall_6_1_0());
					}
					lv_Contient_7_0=ruleJSonAttribut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJSonEnumRule());
						}
						add(
							$current,
							"Contient",
							lv_Contient_7_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getJSonEnumAccess().getRightSquareBracketKeyword_7());
		}
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getJSonEnumAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleJSonString
entryRuleJSonString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonStringRule()); }
	iv_ruleJSonString=ruleJSonString
	{ $current=$iv_ruleJSonString.current; }
	EOF;

// Rule JSonString
ruleJSonString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonString'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonStringAccess().getJSonStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonStringAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonStringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJSonStringAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getJSonStringAccess().getValueKeyword_3_0());
			}
			(
				(
					lv_value_4_0=RULE_STRING
					{
						newLeafNode(lv_value_4_0, grammarAccess.getJSonStringAccess().getValueSTRINGTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJSonStringRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getJSonStringAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleJSonNull
entryRuleJSonNull returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonNullRule()); }
	iv_ruleJSonNull=ruleJSonNull
	{ $current=$iv_ruleJSonNull.current; }
	EOF;

// Rule JSonNull
ruleJSonNull returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJSonNullAccess().getJSonNullAction_0(),
					$current);
			}
		)
		otherlv_1='JSonNull'
		{
			newLeafNode(otherlv_1, grammarAccess.getJSonNullAccess().getJSonNullKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getJSonNullAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonNullRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleOperation_Impl
entryRuleOperation_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperation_ImplRule()); }
	iv_ruleOperation_Impl=ruleOperation_Impl
	{ $current=$iv_ruleOperation_Impl.current; }
	EOF;

// Rule Operation_Impl
ruleOperation_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOperation_ImplAccess().getOperationAction_0(),
					$current);
			}
		)
		otherlv_1='Operation'
		{
			newLeafNode(otherlv_1, grammarAccess.getOperation_ImplAccess().getOperationKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getOperation_ImplAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperation_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleComplexAttribut_Impl
entryRuleComplexAttribut_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexAttribut_ImplRule()); }
	iv_ruleComplexAttribut_Impl=ruleComplexAttribut_Impl
	{ $current=$iv_ruleComplexAttribut_Impl.current; }
	EOF;

// Rule ComplexAttribut_Impl
ruleComplexAttribut_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComplexAttribut_ImplAccess().getComplexAttributAction_0(),
					$current);
			}
		)
		otherlv_1='ComplexAttribut'
		{
			newLeafNode(otherlv_1, grammarAccess.getComplexAttribut_ImplAccess().getComplexAttributKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getComplexAttribut_ImplAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexAttribut_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSimpleAttribut_Impl
entryRuleSimpleAttribut_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleAttribut_ImplRule()); }
	iv_ruleSimpleAttribut_Impl=ruleSimpleAttribut_Impl
	{ $current=$iv_ruleSimpleAttribut_Impl.current; }
	EOF;

// Rule SimpleAttribut_Impl
ruleSimpleAttribut_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSimpleAttribut_ImplAccess().getSimpleAttributAction_0(),
					$current);
			}
		)
		otherlv_1='SimpleAttribut'
		{
			newLeafNode(otherlv_1, grammarAccess.getSimpleAttribut_ImplAccess().getSimpleAttributKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSimpleAttribut_ImplAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSimpleAttribut_ImplRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSum
entryRuleSum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumRule()); }
	iv_ruleSum=ruleSum
	{ $current=$iv_ruleSum.current; }
	EOF;

// Rule Sum
ruleSum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sum'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumAccess().getSumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSumAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSumAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSumRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSumAccess().getListIntergerJsonIntegerCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSumAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSumRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getSumAccess().getListIntergerJsonIntegerCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSumAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDiv
entryRuleDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivRule()); }
	iv_ruleDiv=ruleDiv
	{ $current=$iv_ruleDiv.current; }
	EOF;

// Rule Div
ruleDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Div'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivAccess().getDivKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDivAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getDivAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDivAccess().getContientJsonIntegerCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getDivAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getDivRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getDivAccess().getContientJsonIntegerCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getDivAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMult
entryRuleMult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultRule()); }
	iv_ruleMult=ruleMult
	{ $current=$iv_ruleMult.current; }
	EOF;

// Rule Mult
ruleMult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mult'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultAccess().getMultKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMultAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getMultAccess().getLeftSquareBracketKeyword_2());
		}
		otherlv_3='int'
		{
			newLeafNode(otherlv_3, grammarAccess.getMultAccess().getIntKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getListIntergerJsonIntegerParserRuleCall_4_0());
				}
				lv_listInterger_4_0=ruleJsonInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					add(
						$current,
						"listInterger",
						lv_listInterger_4_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMultAccess().getCommaKeyword_5_0());
			}
			otherlv_6='int'
			{
				newLeafNode(otherlv_6, grammarAccess.getMultAccess().getIntKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultAccess().getListIntergerJsonIntegerParserRuleCall_5_2_0());
					}
					lv_listInterger_7_0=ruleJsonInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultRule());
						}
						add(
							$current,
							"listInterger",
							lv_listInterger_7_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=']'
		{
			newLeafNode(otherlv_8, grammarAccess.getMultAccess().getRightSquareBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sub'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSubAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getSubAccess().getListIntergerJsonIntegerCrossReference_3_0());
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSubAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getSubAccess().getListIntergerJsonIntegerCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubAccess().getRightSquareBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
