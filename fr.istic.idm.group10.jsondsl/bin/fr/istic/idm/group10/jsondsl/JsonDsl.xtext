grammar fr.istic.idm.group10.jsondsl.JsonDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.xtext.org/example/mydsl/MyDsl"

MainGrammar:
JSonFile | Commandes
;
JSonFile:
'JSonFile' name=STRING '{' (Contient+=JSonObject*) '}';



Commandes:
'Commandes'
'{'
Store | Load | Display | Subset | Projection | Insert | Remove | Modify
'}';






JSonObject:
JsonArray | JsonInteger | JsonBoolean | JSonEnum | JSonString | JSonNull | Sum | Div | Mult | Sub;






JSonAttribut:
JsonArray | JsonInteger | JsonBoolean | JSonEnum | JSonString | JSonNull | Sum | Div | Mult | Sub;






/* Load and Store */





Store :
'Store'
'{'
'path' path=STRING ','
'name' name=STRING
'}';





Load:
'Load'
'{'
'path' path=STRING ','
'name' name=STRING
'}';






/* Display */





Display:
'Display'
'{'
'jsonfile' jsonfile+=JSonFile
'}';






/* Replace */





Subset:
'Subset'
'{'
'jsonfile' jsonfile+=JSonFile ','
'listNodes' '(' listNodes+=JSonObject ( "," listNodes+=JSonObject)* ')'
'}';





Projection:
'Projection'
'{'
'jsonfile' jsonfile+=JSonFile ','
'node' node=JSonObject
'}';





/* Modification On File */
Insert:
'Insert'
'{'
'(' 'JsonFileTarget' jsonfile+=JSonFile ',' 'JsonFileSource' jsonfile+=JSonFile ')' ','
'Object:' node=JSonObject
'}';





Remove:
'Remove'
'{'
'JsonFileTarget' jsonfile+=JSonFile ','
'Object:' node=JSonObject
'}';





Modify:
'Modify'
'{'
'(' 'JsonFileTarget' jsonfile+=JSonFile ',' 'JsonFileSource' jsonfile+=JSonFile ')' ','
'Object:' node=JSonObject
'}';







/* ATTRIBUT COMPLEX */





JsonArray:
'JSonArray'
name=STRING '{'
Contient+=JSonAttribut ( "," Contient+=JSonAttribut)*
'}';






JSonEnum:
'JSonEnum'
name=STRING
'[' Contient+=JSonAttribut ( "," Contient+=JSonAttribut)* ']'
;





/* ATTRIBUT SIMPLE */





JsonInteger:
'Integer'
name=STRING
value=INT
;





JsonBoolean:
'Boolean'
name=STRING
value=('true' | 'false')
;



JSonString:
'String'
name=STRING
value=STRING
;





JSonNull:
'Null'
name=STRING;






/* OPPERATION */
Sum:
'Sum'
name=STRING
'['
listInterger+=JsonInteger ( "," listInterger+=JsonInteger)*
']';





Div:
'Div'
name=STRING
'['
listInterger+=JsonInteger ( "," listInterger+=JsonInteger)*
']';





Mult :
'Mult'
name=STRING
'['
listInterger+=JsonInteger ( "," listInterger+=JsonInteger)*
']';





Sub:
'Sub'
name=STRING
'['
listInterger+=JsonInteger ( "," listInterger+=JsonInteger)*
']';






/* TYPE */
EBoolean returns EBoolean:
{EBoolean} 'true' | {EBoolean} 'false';