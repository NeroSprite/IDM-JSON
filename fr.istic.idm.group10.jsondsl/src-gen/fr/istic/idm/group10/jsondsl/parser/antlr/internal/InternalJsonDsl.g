/*
 * generated by Xtext 2.25.0
 */
grammar InternalJsonDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.istic.idm.group10.jsondsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.istic.idm.group10.jsondsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.istic.idm.group10.jsondsl.services.JsonDslGrammarAccess;

}

@parser::members {

 	private JsonDslGrammarAccess grammarAccess;

    public InternalJsonDslParser(TokenStream input, JsonDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MainGrammar";
   	}

   	@Override
   	protected JsonDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMainGrammar
entryRuleMainGrammar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainGrammarRule()); }
	iv_ruleMainGrammar=ruleMainGrammar
	{ $current=$iv_ruleMainGrammar.current; }
	EOF;

// Rule MainGrammar
ruleMainGrammar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMainGrammarAccess().getJSonFileParserRuleCall_0());
		}
		this_JSonFile_0=ruleJSonFile
		{
			$current = $this_JSonFile_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMainGrammarAccess().getCommandesParserRuleCall_1());
		}
		this_Commandes_1=ruleCommandes
		{
			$current = $this_Commandes_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJSonFile
entryRuleJSonFile returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonFileRule()); }
	iv_ruleJSonFile=ruleJSonFile
	{ $current=$iv_ruleJSonFile.current; }
	EOF;

// Rule JSonFile
ruleJSonFile returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonFile'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonFileAccess().getJSonFileKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonFileAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonFileRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJSonFileAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJSonFileAccess().getContientJSonObjectParserRuleCall_3_0());
				}
				lv_Contient_3_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJSonFileRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getJSonFileAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCommandes
entryRuleCommandes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandesRule()); }
	iv_ruleCommandes=ruleCommandes
	{ $current=$iv_ruleCommandes.current; }
	EOF;

// Rule Commandes
ruleCommandes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='Commandes'
			{
				newLeafNode(otherlv_0, grammarAccess.getCommandesAccess().getCommandesKeyword_0_0());
			}
			otherlv_1='{'
			{
				newLeafNode(otherlv_1, grammarAccess.getCommandesAccess().getLeftCurlyBracketKeyword_0_1());
			}
			{
				newCompositeNode(grammarAccess.getCommandesAccess().getStoreParserRuleCall_0_2());
			}
			this_Store_2=ruleStore
			{
				$current = $this_Store_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getLoadParserRuleCall_1());
		}
		this_Load_3=ruleLoad
		{
			$current = $this_Load_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getDisplayParserRuleCall_2());
		}
		this_Display_4=ruleDisplay
		{
			$current = $this_Display_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getSubsetParserRuleCall_3());
		}
		this_Subset_5=ruleSubset
		{
			$current = $this_Subset_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getProjectionParserRuleCall_4());
		}
		this_Projection_6=ruleProjection
		{
			$current = $this_Projection_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getInsertParserRuleCall_5());
		}
		this_Insert_7=ruleInsert
		{
			$current = $this_Insert_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandesAccess().getRemoveParserRuleCall_6());
		}
		this_Remove_8=ruleRemove
		{
			$current = $this_Remove_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getCommandesAccess().getModifyParserRuleCall_7_0());
			}
			this_Modify_9=ruleModify
			{
				$current = $this_Modify_9.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getCommandesAccess().getRightCurlyBracketKeyword_7_1());
			}
		)
	)
;

// Entry rule entryRuleJSonObject
entryRuleJSonObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonObjectRule()); }
	iv_ruleJSonObject=ruleJSonObject
	{ $current=$iv_ruleJSonObject.current; }
	EOF;

// Rule JSonObject
ruleJSonObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonArrayParserRuleCall_0());
		}
		this_JsonArray_0=ruleJsonArray
		{
			$current = $this_JsonArray_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonIntegerParserRuleCall_1());
		}
		this_JsonInteger_1=ruleJsonInteger
		{
			$current = $this_JsonInteger_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJsonBooleanParserRuleCall_2());
		}
		this_JsonBoolean_2=ruleJsonBoolean
		{
			$current = $this_JsonBoolean_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonEnumParserRuleCall_3());
		}
		this_JSonEnum_3=ruleJSonEnum
		{
			$current = $this_JSonEnum_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonStringParserRuleCall_4());
		}
		this_JSonString_4=ruleJSonString
		{
			$current = $this_JSonString_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getJSonNullParserRuleCall_5());
		}
		this_JSonNull_5=ruleJSonNull
		{
			$current = $this_JSonNull_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getSumParserRuleCall_6());
		}
		this_Sum_6=ruleSum
		{
			$current = $this_Sum_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getDivParserRuleCall_7());
		}
		this_Div_7=ruleDiv
		{
			$current = $this_Div_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getMultParserRuleCall_8());
		}
		this_Mult_8=ruleMult
		{
			$current = $this_Mult_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonObjectAccess().getSubParserRuleCall_9());
		}
		this_Sub_9=ruleSub
		{
			$current = $this_Sub_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleJSonAttribut
entryRuleJSonAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonAttributRule()); }
	iv_ruleJSonAttribut=ruleJSonAttribut
	{ $current=$iv_ruleJSonAttribut.current; }
	EOF;

// Rule JSonAttribut
ruleJSonAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonArrayParserRuleCall_0());
		}
		this_JsonArray_0=ruleJsonArray
		{
			$current = $this_JsonArray_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonIntegerParserRuleCall_1());
		}
		this_JsonInteger_1=ruleJsonInteger
		{
			$current = $this_JsonInteger_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJsonBooleanParserRuleCall_2());
		}
		this_JsonBoolean_2=ruleJsonBoolean
		{
			$current = $this_JsonBoolean_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonEnumParserRuleCall_3());
		}
		this_JSonEnum_3=ruleJSonEnum
		{
			$current = $this_JSonEnum_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonStringParserRuleCall_4());
		}
		this_JSonString_4=ruleJSonString
		{
			$current = $this_JSonString_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getJSonNullParserRuleCall_5());
		}
		this_JSonNull_5=ruleJSonNull
		{
			$current = $this_JSonNull_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getSumParserRuleCall_6());
		}
		this_Sum_6=ruleSum
		{
			$current = $this_Sum_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getDivParserRuleCall_7());
		}
		this_Div_7=ruleDiv
		{
			$current = $this_Div_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getMultParserRuleCall_8());
		}
		this_Mult_8=ruleMult
		{
			$current = $this_Mult_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getJSonAttributAccess().getSubParserRuleCall_9());
		}
		this_Sub_9=ruleSub
		{
			$current = $this_Sub_9.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStore
entryRuleStore returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStoreRule()); }
	iv_ruleStore=ruleStore
	{ $current=$iv_ruleStore.current; }
	EOF;

// Rule Store
ruleStore returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Store'
		{
			newLeafNode(otherlv_0, grammarAccess.getStoreAccess().getStoreKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStoreAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='path'
		{
			newLeafNode(otherlv_2, grammarAccess.getStoreAccess().getPathKeyword_2());
		}
		(
			(
				lv_path_3_0=RULE_STRING
				{
					newLeafNode(lv_path_3_0, grammarAccess.getStoreAccess().getPathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getStoreAccess().getCommaKeyword_4());
		}
		otherlv_5='name'
		{
			newLeafNode(otherlv_5, grammarAccess.getStoreAccess().getNameKeyword_5());
		}
		(
			(
				lv_name_6_0=RULE_STRING
				{
					newLeafNode(lv_name_6_0, grammarAccess.getStoreAccess().getNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStoreRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getStoreAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLoad
entryRuleLoad returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadRule()); }
	iv_ruleLoad=ruleLoad
	{ $current=$iv_ruleLoad.current; }
	EOF;

// Rule Load
ruleLoad returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Load'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoadAccess().getLoadKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoadAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='path'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoadAccess().getPathKeyword_2());
		}
		(
			(
				lv_path_3_0=RULE_STRING
				{
					newLeafNode(lv_path_3_0, grammarAccess.getLoadAccess().getPathSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getLoadAccess().getCommaKeyword_4());
		}
		otherlv_5='name'
		{
			newLeafNode(otherlv_5, grammarAccess.getLoadAccess().getNameKeyword_5());
		}
		(
			(
				lv_name_6_0=RULE_STRING
				{
					newLeafNode(lv_name_6_0, grammarAccess.getLoadAccess().getNameSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLoadRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_6_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLoadAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleDisplay
entryRuleDisplay returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDisplayRule()); }
	iv_ruleDisplay=ruleDisplay
	{ $current=$iv_ruleDisplay.current; }
	EOF;

// Rule Display
ruleDisplay returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Display'
		{
			newLeafNode(otherlv_0, grammarAccess.getDisplayAccess().getDisplayKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDisplayAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='jsonfile'
		{
			newLeafNode(otherlv_2, grammarAccess.getDisplayAccess().getJsonfileKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDisplayAccess().getJsonfileJSonFileParserRuleCall_3_0());
				}
				lv_jsonfile_3_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDisplayRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getDisplayAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleSubset
entryRuleSubset returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubsetRule()); }
	iv_ruleSubset=ruleSubset
	{ $current=$iv_ruleSubset.current; }
	EOF;

// Rule Subset
ruleSubset returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Subset'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubsetAccess().getSubsetKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubsetAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='jsonfile'
		{
			newLeafNode(otherlv_2, grammarAccess.getSubsetAccess().getJsonfileKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubsetAccess().getJsonfileJSonFileParserRuleCall_3_0());
				}
				lv_jsonfile_3_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubsetRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getSubsetAccess().getCommaKeyword_4());
		}
		otherlv_5='listNodes'
		{
			newLeafNode(otherlv_5, grammarAccess.getSubsetAccess().getListNodesKeyword_5());
		}
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getSubsetAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubsetAccess().getListNodesJSonObjectParserRuleCall_7_0());
				}
				lv_listNodes_7_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubsetRule());
					}
					add(
						$current,
						"listNodes",
						lv_listNodes_7_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getSubsetAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubsetAccess().getListNodesJSonObjectParserRuleCall_8_1_0());
					}
					lv_listNodes_9_0=ruleJSonObject
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubsetRule());
						}
						add(
							$current,
							"listNodes",
							lv_listNodes_9_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getSubsetAccess().getRightParenthesisKeyword_9());
		}
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getSubsetAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleProjection
entryRuleProjection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProjectionRule()); }
	iv_ruleProjection=ruleProjection
	{ $current=$iv_ruleProjection.current; }
	EOF;

// Rule Projection
ruleProjection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Projection'
		{
			newLeafNode(otherlv_0, grammarAccess.getProjectionAccess().getProjectionKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProjectionAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='jsonfile'
		{
			newLeafNode(otherlv_2, grammarAccess.getProjectionAccess().getJsonfileKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectionAccess().getJsonfileJSonFileParserRuleCall_3_0());
				}
				lv_jsonfile_3_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectionRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getProjectionAccess().getCommaKeyword_4());
		}
		otherlv_5='node'
		{
			newLeafNode(otherlv_5, grammarAccess.getProjectionAccess().getNodeKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProjectionAccess().getNodeJSonObjectParserRuleCall_6_0());
				}
				lv_node_6_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProjectionRule());
					}
					set(
						$current,
						"node",
						lv_node_6_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getProjectionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleInsert
entryRuleInsert returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertRule()); }
	iv_ruleInsert=ruleInsert
	{ $current=$iv_ruleInsert.current; }
	EOF;

// Rule Insert
ruleInsert returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Insert'
		{
			newLeafNode(otherlv_0, grammarAccess.getInsertAccess().getInsertKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='JsonFileTarget'
		{
			newLeafNode(otherlv_3, grammarAccess.getInsertAccess().getJsonFileTargetKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getJsonfileJSonFileParserRuleCall_4_0());
				}
				lv_jsonfile_4_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_4_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getInsertAccess().getCommaKeyword_5());
		}
		otherlv_6='JsonFileSource'
		{
			newLeafNode(otherlv_6, grammarAccess.getInsertAccess().getJsonFileSourceKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getJsonfileJSonFileParserRuleCall_7_0());
				}
				lv_jsonfile_7_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_7_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getInsertAccess().getRightParenthesisKeyword_8());
		}
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getInsertAccess().getCommaKeyword_9());
		}
		otherlv_10='Object:'
		{
			newLeafNode(otherlv_10, grammarAccess.getInsertAccess().getObjectKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInsertAccess().getNodeJSonObjectParserRuleCall_11_0());
				}
				lv_node_11_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInsertRule());
					}
					set(
						$current,
						"node",
						lv_node_11_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getInsertAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleRemove
entryRuleRemove returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRemoveRule()); }
	iv_ruleRemove=ruleRemove
	{ $current=$iv_ruleRemove.current; }
	EOF;

// Rule Remove
ruleRemove returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Remove'
		{
			newLeafNode(otherlv_0, grammarAccess.getRemoveAccess().getRemoveKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRemoveAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='JsonFileTarget'
		{
			newLeafNode(otherlv_2, grammarAccess.getRemoveAccess().getJsonFileTargetKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getJsonfileJSonFileParserRuleCall_3_0());
				}
				lv_jsonfile_3_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getRemoveAccess().getCommaKeyword_4());
		}
		otherlv_5='Object:'
		{
			newLeafNode(otherlv_5, grammarAccess.getRemoveAccess().getObjectKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRemoveAccess().getNodeJSonObjectParserRuleCall_6_0());
				}
				lv_node_6_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRemoveRule());
					}
					set(
						$current,
						"node",
						lv_node_6_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getRemoveAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleModify
entryRuleModify returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifyRule()); }
	iv_ruleModify=ruleModify
	{ $current=$iv_ruleModify.current; }
	EOF;

// Rule Modify
ruleModify returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Modify'
		{
			newLeafNode(otherlv_0, grammarAccess.getModifyAccess().getModifyKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getModifyAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getModifyAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='JsonFileTarget'
		{
			newLeafNode(otherlv_3, grammarAccess.getModifyAccess().getJsonFileTargetKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getJsonfileJSonFileParserRuleCall_4_0());
				}
				lv_jsonfile_4_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_4_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getModifyAccess().getCommaKeyword_5());
		}
		otherlv_6='JsonFileSource'
		{
			newLeafNode(otherlv_6, grammarAccess.getModifyAccess().getJsonFileSourceKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getJsonfileJSonFileParserRuleCall_7_0());
				}
				lv_jsonfile_7_0=ruleJSonFile
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					add(
						$current,
						"jsonfile",
						lv_jsonfile_7_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonFile");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getModifyAccess().getRightParenthesisKeyword_8());
		}
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getModifyAccess().getCommaKeyword_9());
		}
		otherlv_10='Object:'
		{
			newLeafNode(otherlv_10, grammarAccess.getModifyAccess().getObjectKeyword_10());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifyAccess().getNodeJSonObjectParserRuleCall_11_0());
				}
				lv_node_11_0=ruleJSonObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifyRule());
					}
					set(
						$current,
						"node",
						lv_node_11_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getModifyAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Entry rule entryRuleJsonArray
entryRuleJsonArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonArrayRule()); }
	iv_ruleJsonArray=ruleJsonArray
	{ $current=$iv_ruleJsonArray.current; }
	EOF;

// Rule JsonArray
ruleJsonArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonArray'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonArrayAccess().getJSonArrayKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJsonArrayAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonArrayRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getJsonArrayAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_3_0());
				}
				lv_Contient_3_0=ruleJSonAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJsonArrayRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getJsonArrayAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJsonArrayAccess().getContientJSonAttributParserRuleCall_4_1_0());
					}
					lv_Contient_5_0=ruleJSonAttribut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJsonArrayRule());
						}
						add(
							$current,
							"Contient",
							lv_Contient_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getJsonArrayAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleJSonEnum
entryRuleJSonEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonEnumRule()); }
	iv_ruleJSonEnum=ruleJSonEnum
	{ $current=$iv_ruleJSonEnum.current; }
	EOF;

// Rule JSonEnum
ruleJSonEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='JSonEnum'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonEnumAccess().getJSonEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonEnumAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonEnumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getJSonEnumAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getJSonEnumAccess().getContientJSonAttributParserRuleCall_3_0());
				}
				lv_Contient_3_0=ruleJSonAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJSonEnumRule());
					}
					add(
						$current,
						"Contient",
						lv_Contient_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getJSonEnumAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getJSonEnumAccess().getContientJSonAttributParserRuleCall_4_1_0());
					}
					lv_Contient_5_0=ruleJSonAttribut
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getJSonEnumRule());
						}
						add(
							$current,
							"Contient",
							lv_Contient_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JSonAttribut");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getJSonEnumAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleJsonInteger
entryRuleJsonInteger returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonIntegerRule()); }
	iv_ruleJsonInteger=ruleJsonInteger
	{ $current=$iv_ruleJsonInteger.current; }
	EOF;

// Rule JsonInteger
ruleJsonInteger returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Integer'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonIntegerAccess().getIntegerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJsonIntegerAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonIntegerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getJsonIntegerAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonIntegerRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleJsonBoolean
entryRuleJsonBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJsonBooleanRule()); }
	iv_ruleJsonBoolean=ruleJsonBoolean
	{ $current=$iv_ruleJsonBoolean.current; }
	EOF;

// Rule JsonBoolean
ruleJsonBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Boolean'
		{
			newLeafNode(otherlv_0, grammarAccess.getJsonBooleanAccess().getBooleanKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJsonBooleanAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJsonBooleanRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				(
					lv_value_2_1='true'
					{
						newLeafNode(lv_value_2_1, grammarAccess.getJsonBooleanAccess().getValueTrueKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJsonBooleanRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_1, null);
					}
					    |
					lv_value_2_2='false'
					{
						newLeafNode(lv_value_2_2, grammarAccess.getJsonBooleanAccess().getValueFalseKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJsonBooleanRule());
						}
						setWithLastConsumed($current, "value", lv_value_2_2, null);
					}
				)
			)
		)
	)
;

// Entry rule entryRuleJSonString
entryRuleJSonString returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonStringRule()); }
	iv_ruleJSonString=ruleJSonString
	{ $current=$iv_ruleJSonString.current; }
	EOF;

// Rule JSonString
ruleJSonString returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='String'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonStringAccess().getStringKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonStringAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonStringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_value_2_0=RULE_STRING
				{
					newLeafNode(lv_value_2_0, grammarAccess.getJSonStringAccess().getValueSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonStringRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleJSonNull
entryRuleJSonNull returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJSonNullRule()); }
	iv_ruleJSonNull=ruleJSonNull
	{ $current=$iv_ruleJSonNull.current; }
	EOF;

// Rule JSonNull
ruleJSonNull returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Null'
		{
			newLeafNode(otherlv_0, grammarAccess.getJSonNullAccess().getNullKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getJSonNullAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJSonNullRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSum
entryRuleSum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumRule()); }
	iv_ruleSum=ruleSum
	{ $current=$iv_ruleSum.current; }
	EOF;

// Rule Sum
ruleSum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sum'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumAccess().getSumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSumAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSumRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSumAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSumAccess().getListIntergerJsonIntegerParserRuleCall_3_0());
				}
				lv_listInterger_3_0=ruleJsonInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumRule());
					}
					add(
						$current,
						"listInterger",
						lv_listInterger_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSumAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSumAccess().getListIntergerJsonIntegerParserRuleCall_4_1_0());
					}
					lv_listInterger_5_0=ruleJsonInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSumRule());
						}
						add(
							$current,
							"listInterger",
							lv_listInterger_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSumAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDiv
entryRuleDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivRule()); }
	iv_ruleDiv=ruleDiv
	{ $current=$iv_ruleDiv.current; }
	EOF;

// Rule Div
ruleDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Div'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivAccess().getDivKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDivAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getDivAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivAccess().getListIntergerJsonIntegerParserRuleCall_3_0());
				}
				lv_listInterger_3_0=ruleJsonInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivRule());
					}
					add(
						$current,
						"listInterger",
						lv_listInterger_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getDivAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDivAccess().getListIntergerJsonIntegerParserRuleCall_4_1_0());
					}
					lv_listInterger_5_0=ruleJsonInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDivRule());
						}
						add(
							$current,
							"listInterger",
							lv_listInterger_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getDivAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleMult
entryRuleMult returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultRule()); }
	iv_ruleMult=ruleMult
	{ $current=$iv_ruleMult.current; }
	EOF;

// Rule Mult
ruleMult returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mult'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultAccess().getMultKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMultAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMultRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getMultAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultAccess().getListIntergerJsonIntegerParserRuleCall_3_0());
				}
				lv_listInterger_3_0=ruleJsonInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultRule());
					}
					add(
						$current,
						"listInterger",
						lv_listInterger_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getMultAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultAccess().getListIntergerJsonIntegerParserRuleCall_4_1_0());
					}
					lv_listInterger_5_0=ruleJsonInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultRule());
						}
						add(
							$current,
							"listInterger",
							lv_listInterger_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getMultAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleSub
entryRuleSub returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubRule()); }
	iv_ruleSub=ruleSub
	{ $current=$iv_ruleSub.current; }
	EOF;

// Rule Sub
ruleSub returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sub'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubAccess().getSubKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSubAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSubRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getSubAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubAccess().getListIntergerJsonIntegerParserRuleCall_3_0());
				}
				lv_listInterger_3_0=ruleJsonInteger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubRule());
					}
					add(
						$current,
						"listInterger",
						lv_listInterger_3_0,
						"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getSubAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSubAccess().getListIntergerJsonIntegerParserRuleCall_4_1_0());
					}
					lv_listInterger_5_0=ruleJsonInteger
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSubRule());
						}
						add(
							$current,
							"listInterger",
							lv_listInterger_5_0,
							"fr.istic.idm.group10.jsondsl.JsonDsl.JsonInteger");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_6=']'
		{
			newLeafNode(otherlv_6, grammarAccess.getSubAccess().getRightSquareBracketKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
