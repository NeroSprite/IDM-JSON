/**
 * generated by Xtext 2.25.0
 */
package fr.istic.idm.group10.jsondsl.myDsl.impl;

import fr.istic.idm.group10.jsondsl.myDsl.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.MAIN_GRAMMAR: return createMainGrammar();
      case MyDslPackage.JSON_FILE: return createJSonFile();
      case MyDslPackage.COMMANDES: return createCommandes();
      case MyDslPackage.JSON_OBJECT: return createJSonObject();
      case MyDslPackage.JSON_ATTRIBUT: return createJSonAttribut();
      case MyDslPackage.STORE: return createStore();
      case MyDslPackage.LOAD: return createLoad();
      case MyDslPackage.DISPLAY: return createDisplay();
      case MyDslPackage.SUBSET: return createSubset();
      case MyDslPackage.PROJECTION: return createProjection();
      case MyDslPackage.INSERT: return createInsert();
      case MyDslPackage.REMOVE: return createRemove();
      case MyDslPackage.MODIFY: return createModify();
      case MyDslPackage.JSON_ARRAY: return createJsonArray();
      case MyDslPackage.JSON_ENUM: return createJSonEnum();
      case MyDslPackage.JSON_INTEGER: return createJsonInteger();
      case MyDslPackage.JSON_BOOLEAN: return createJsonBoolean();
      case MyDslPackage.JSON_STRING: return createJSonString();
      case MyDslPackage.JSON_NULL: return createJSonNull();
      case MyDslPackage.SUM: return createSum();
      case MyDslPackage.DIV: return createDiv();
      case MyDslPackage.MULT: return createMult();
      case MyDslPackage.SUB: return createSub();
      case MyDslPackage.EBOOLEAN: return createEBoolean();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MainGrammar createMainGrammar()
  {
    MainGrammarImpl mainGrammar = new MainGrammarImpl();
    return mainGrammar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonFile createJSonFile()
  {
    JSonFileImpl jSonFile = new JSonFileImpl();
    return jSonFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Commandes createCommandes()
  {
    CommandesImpl commandes = new CommandesImpl();
    return commandes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonObject createJSonObject()
  {
    JSonObjectImpl jSonObject = new JSonObjectImpl();
    return jSonObject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonAttribut createJSonAttribut()
  {
    JSonAttributImpl jSonAttribut = new JSonAttributImpl();
    return jSonAttribut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Store createStore()
  {
    StoreImpl store = new StoreImpl();
    return store;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Load createLoad()
  {
    LoadImpl load = new LoadImpl();
    return load;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Display createDisplay()
  {
    DisplayImpl display = new DisplayImpl();
    return display;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Subset createSubset()
  {
    SubsetImpl subset = new SubsetImpl();
    return subset;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Projection createProjection()
  {
    ProjectionImpl projection = new ProjectionImpl();
    return projection;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Insert createInsert()
  {
    InsertImpl insert = new InsertImpl();
    return insert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Remove createRemove()
  {
    RemoveImpl remove = new RemoveImpl();
    return remove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Modify createModify()
  {
    ModifyImpl modify = new ModifyImpl();
    return modify;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsonArray createJsonArray()
  {
    JsonArrayImpl jsonArray = new JsonArrayImpl();
    return jsonArray;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonEnum createJSonEnum()
  {
    JSonEnumImpl jSonEnum = new JSonEnumImpl();
    return jSonEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsonInteger createJsonInteger()
  {
    JsonIntegerImpl jsonInteger = new JsonIntegerImpl();
    return jsonInteger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JsonBoolean createJsonBoolean()
  {
    JsonBooleanImpl jsonBoolean = new JsonBooleanImpl();
    return jsonBoolean;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonString createJSonString()
  {
    JSonStringImpl jSonString = new JSonStringImpl();
    return jSonString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JSonNull createJSonNull()
  {
    JSonNullImpl jSonNull = new JSonNullImpl();
    return jSonNull;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sum createSum()
  {
    SumImpl sum = new SumImpl();
    return sum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Div createDiv()
  {
    DivImpl div = new DivImpl();
    return div;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Mult createMult()
  {
    MultImpl mult = new MultImpl();
    return mult;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sub createSub()
  {
    SubImpl sub = new SubImpl();
    return sub;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EBoolean createEBoolean()
  {
    EBooleanImpl eBoolean = new EBooleanImpl();
    return eBoolean;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
